services:
  database:
    image: postgres:15.12
    container_name: yivi-portal-db
    restart: unless-stopped
    networks:
      - db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    container_name: django
    build:
      context: .
      dockerfile: Dockerfile.django
    restart: unless-stopped
    command: /bin/sh /app/entrypoint_dev.sh
    networks:
      - web
      - db
    ports:
      - 8000:8000
    depends_on:
      - database
      # - yivi
    volumes:
      - .:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - YIVI_SERVER_URL=${YIVI_SERVER_URL:-http://yivi:8080}
      - YIVI_SERVER_TOKEN=${YIVI_SERVER_TOKEN}
      - DJANGO_SETTINGS_MODULE=yivi_portal.settings.development
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*,localhost,127.0.0.1}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:9000,http://localhost:3000}
    healthcheck:
      test: ['CMD', 'python', 'manage.py', 'check']
      interval: 60s
      timeout: 20s
      retries: 3

  nextjs:
    build:
      context: portal_frontend
      dockerfile: Dockerfile.nextjs
      # target: nextjs
    container_name: nextjs
    ports:
      - "9000:3000"
    depends_on:
      - django
    networks:
      - web

  yivi-portal-cron:
    container_name: yivi-portal-cron
    build:
      context: .
      dockerfile: Dockerfile.django
    entrypoint: ['/bin/sh', '/app/entrypoint_cron.sh']
    restart: unless-stopped
    networks:
      - web
      - db
    depends_on:
      - database
      - django
    volumes:
      - .:/app
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - DJANGO_SETTINGS_MODULE=yivi_portal.settings.development
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*,localhost,127.0.0.1}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:9000}

networks:
  web:
  db:

volumes:
  postgres-data: