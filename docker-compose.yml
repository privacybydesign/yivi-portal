services:
  database:
    image: postgres:15.12
    container_name: yivi-portal-db
    restart: unless-stopped
    networks:
      - db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}

    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  django:
    container_name: django
    build:
      context: .
      dockerfile: Dockerfile.django.dev
    restart: unless-stopped
    networks:
      - web
      - db
    ports:
      - 8000:8000
    depends_on:
      - database
    volumes:
      - .:/app
    env_file:
      - .env
    healthcheck:
      test: ['CMD', 'python', 'manage.py', 'check']
      interval: 60s
      timeout: 20s
      retries: 3

  nextjs:
    build:
      context: portal_frontend
      dockerfile: Dockerfile.nextjs
      # target: nextjs
    container_name: nextjs
    ports:
      - "9000:3000"
    depends_on:
      - django
    networks:
      - web

  yivi-portal-cron:
    container_name: yivi-portal-cron
    build:
      context: .
      dockerfile: Dockerfile.django.dev
    entrypoint: ['/bin/sh', '/app/entrypoint_cron.sh']
    restart: unless-stopped
    networks:
      - web
      - db
    depends_on:
      - database
      - django
    volumes:
      - .:/app
    env_file:
      - ./.env
      

networks:
  web:
  db:

volumes:
  postgres-data: