# Generated by Django 5.0.13 on 2025-04-28 08:18

import django.core.validators
import django.db.models.deletion
import django_countries.fields
import imagekit.models.fields
import portal_backend.models.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AttestationProvider",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.CharField(max_length=50)),
                (
                    "shortname_en",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "shortname_nl",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "contact_email",
                    models.EmailField(blank=True, max_length=255, null=True),
                ),
                ("base_url", models.URLField(blank=True, null=True)),
                ("ready", models.BooleanField(default=False)),
                ("ready_at", models.DateTimeField(blank=True, null=True)),
                ("reviewed_accepted", models.BooleanField(default=False, null=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_remarks", models.TextField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("approved_ap_details", models.JSONField(null=True)),
                ("published_ap_details", models.JSONField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Condiscon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("condiscon", models.JSONField()),
                ("context_description_en", models.CharField(max_length=255)),
                ("context_description_nl", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name_en", models.CharField(max_length=255)),
                ("name_nl", models.CharField(max_length=255)),
                ("slug", models.SlugField(unique=True)),
                (
                    "registration_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("street", models.CharField(blank=True, max_length=35, null=True)),
                (
                    "house_number",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("postal_code", models.CharField(blank=True, max_length=35, null=True)),
                ("city", models.CharField(blank=True, max_length=35, null=True)),
                ("country", django_countries.fields.CountryField(max_length=2)),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(null=True)),
                (
                    "logo",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        null=True,
                        storage=portal_backend.models.models.LogoStorage(),
                        upload_to=portal_backend.models.models.LogoStorage.get_logo_path,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["png", "jpg", "jpeg"]
                            )
                        ],
                    ),
                ),
                (
                    "approved_logo",
                    models.ImageField(blank=True, null=True, upload_to=""),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Credential",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("credential_tag", models.CharField(max_length=100)),
                ("name_en", models.CharField(max_length=255)),
                ("name_nl", models.CharField(max_length=255)),
                ("description_en", models.TextField()),
                ("description_nl", models.TextField()),
                (
                    "attestation_provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="credentials",
                        to="portal_backend.attestationprovider",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CredentialAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "credential",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attributes",
                        to="portal_backend.credential",
                    ),
                ),
            ],
            options={
                "unique_together": {("credential", "name")},
            },
        ),
        migrations.CreateModel(
            name="CondisconAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reason_en", models.TextField()),
                ("reason_nl", models.TextField()),
                (
                    "condiscon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="portal_backend.condiscon",
                    ),
                ),
                (
                    "credential_attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="condiscon_attributes",
                        to="portal_backend.credentialattribute",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="attestationprovider",
            name="organization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attestation_providers",
                to="portal_backend.organization",
            ),
        ),
        migrations.CreateModel(
            name="RelyingParty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rp_slug", models.SlugField(blank=True, null=True, unique=True)),
                ("ready", models.BooleanField(default=False)),
                ("ready_at", models.DateTimeField(blank=True, null=True)),
                ("reviewed_accepted", models.BooleanField(default=False, null=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_remarks", models.TextField(blank=True, null=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approved_rp_details",
                    models.JSONField(blank=True, default=None, null=True),
                ),
                (
                    "published_rp_details",
                    models.JSONField(blank=True, default=None, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="relying_parties",
                        to="portal_backend.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relying Party",
                "verbose_name_plural": "Relying Parties",
            },
        ),
        migrations.AddField(
            model_name="condiscon",
            name="relying_party",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="condiscons",
                to="portal_backend.relyingparty",
            ),
        ),
        migrations.CreateModel(
            name="RelyingPartyHostname",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "hostname",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                code="invalid_domain",
                                message="Enter a valid domain (e.g., example.com).",
                                regex="^(?!-)[A-Za-z0-9-]{1,63}(?<!-)(\\.[A-Za-z0-9-]{1,63}(?<!-))*(\\.[A-Za-z]{2,6})+$",
                            )
                        ],
                    ),
                ),
                (
                    "dns_challenge",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dns_challenge_created_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("dns_challenge_verified", models.BooleanField(blank=True, null=True)),
                (
                    "dns_challenge_verified_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "dns_challenge_invalidated_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("manually_verified", models.BooleanField(blank=True, null=True)),
                (
                    "relying_party",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hostnames",
                        to="portal_backend.relyingparty",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrustModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("eudi_compliant", models.BooleanField(default=False)),
                (
                    "organizations",
                    models.ManyToManyField(
                        related_name="trust_models", to="portal_backend.organization"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email", models.EmailField(max_length=255, unique=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("admin", "Admin"), ("maintainer", "Maintainer")],
                        max_length=20,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="portal_backend.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.CreateModel(
            name="YiviTrustModelEnv",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "environment",
                    models.CharField(
                        choices=[
                            ("production", "Production"),
                            ("development", "Development"),
                            ("demo", "Demo"),
                        ],
                        max_length=50,
                    ),
                ),
                ("timestamp_server", models.CharField(max_length=255)),
                ("keyshare_server", models.CharField(max_length=255)),
                ("keyshare_website", models.CharField(max_length=255)),
                ("keyshare_attribute", models.CharField(max_length=255)),
                ("contact", models.CharField(max_length=255)),
                ("minimum_android_version", models.CharField(max_length=20)),
                ("minimum_ios_version", models.CharField(max_length=20)),
                ("description_en", models.TextField()),
                ("description_nl", models.TextField()),
                (
                    "url",
                    models.URLField(validators=[django.core.validators.URLValidator()]),
                ),
                (
                    "trust_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="environments",
                        to="portal_backend.trustmodel",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="relyingparty",
            name="yivi_tme",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="relying_parties",
                to="portal_backend.yivitrustmodelenv",
            ),
        ),
        migrations.AddField(
            model_name="attestationprovider",
            name="yivi_tme",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="attestation_providers",
                to="portal_backend.yivitrustmodelenv",
            ),
        ),
    ]
